> #Reading csv file
> heart_data <- read.csv("Cleavland.csv")
> class(heart_data)
[1] "data.frame"
> names(heart_data)
 [1] "X63.0"  "X1.0"   "X1.0.1" "X145.0" "X233.0" "X1.0.2"
 [7] "X2.0"   "X150.0" "X0.0"   "X2.3"   "X3.0"   "X0.0.1"
[13] "X6.0"   "X0"    
> str(heart_data)
'data.frame':	302 obs. of  14 variables:
 $ X63.0 : num  67 67 37 41 56 62 57 63 53 57 ...
 $ X1.0  : num  1 1 1 0 1 0 0 1 1 1 ...
 $ X1.0.1: num  4 4 3 2 2 4 4 4 4 4 ...
 $ X145.0: num  160 120 130 130 120 140 120 130 140 140 ...
 $ X233.0: num  286 229 250 204 236 268 354 254 203 192 ...
 $ X1.0.2: num  0 0 0 0 0 0 0 0 1 0 ...
 $ X2.0  : num  2 2 0 2 0 2 0 2 2 0 ...
 $ X150.0: num  108 129 187 172 178 160 163 147 155 148 ...
 $ X0.0  : num  1 1 0 0 0 0 1 0 1 0 ...
 $ X2.3  : num  1.5 2.6 3.5 1.4 0.8 3.6 0.6 1.4 3.1 0.4 ...
 $ X3.0  : num  2 2 3 1 1 3 1 2 3 2 ...
 $ X0.0.1: Factor w/ 5 levels "?","0.0","1.0",..: 5 4 2 2 2 4 2 3 2 2 ...
 $ X6.0  : Factor w/ 4 levels "?","3.0","6.0",..: 2 4 2 2 2 2 2 4 4 3 ...
 $ X0    : int  2 1 0 0 0 3 0 2 1 0 ...
> dim(heart_data)
[1] 302  14
> summary(heart_data)
     X63.0            X1.0            X1.0.1     
 Min.   :29.00   Min.   :0.0000   Min.   :1.000  
 1st Qu.:48.00   1st Qu.:0.0000   1st Qu.:3.000  
 Median :55.50   Median :1.0000   Median :3.000  
 Mean   :54.41   Mean   :0.6788   Mean   :3.166  
 3rd Qu.:61.00   3rd Qu.:1.0000   3rd Qu.:4.000  
 Max.   :77.00   Max.   :1.0000   Max.   :4.000  
     X145.0          X233.0          X1.0.2      
 Min.   : 94.0   Min.   :126.0   Min.   :0.0000  
 1st Qu.:120.0   1st Qu.:211.0   1st Qu.:0.0000  
 Median :130.0   Median :241.5   Median :0.0000  
 Mean   :131.6   Mean   :246.7   Mean   :0.1457  
 3rd Qu.:140.0   3rd Qu.:275.0   3rd Qu.:0.0000  
 Max.   :200.0   Max.   :564.0   Max.   :1.0000  
      X2.0            X150.0           X0.0       
 Min.   :0.0000   Min.   : 71.0   Min.   :0.0000  
 1st Qu.:0.0000   1st Qu.:133.2   1st Qu.:0.0000  
 Median :0.5000   Median :153.0   Median :0.0000  
 Mean   :0.9868   Mean   :149.6   Mean   :0.3278  
 3rd Qu.:2.0000   3rd Qu.:166.0   3rd Qu.:1.0000  
 Max.   :2.0000   Max.   :202.0   Max.   :1.0000  
      X2.3            X3.0       X0.0.1     X6.0    
 Min.   :0.000   Min.   :1.000   ?  :  4   ?  :  2  
 1st Qu.:0.000   1st Qu.:1.000   0.0:175   3.0:166  
 Median :0.800   Median :2.000   1.0: 65   6.0: 17  
 Mean   :1.035   Mean   :1.596   2.0: 38   7.0:117  
 3rd Qu.:1.600   3rd Qu.:2.000   3.0: 20            
 Max.   :6.200   Max.   :3.000                      
       X0        
 Min.   :0.0000  
 1st Qu.:0.0000  
 Median :0.0000  
 Mean   :0.9404  
 3rd Qu.:2.0000  
 Max.   :4.0000  
> # Change the name of headers
> names(heart_data)[1] <- "age"
> names(heart_data)[2] <- "Gender"
> names(heart_data)[3] <- "cp"
> names(heart_data)[4] <- "trestbps"
> names(heart_data)[5] <- "chol"
> names(heart_data)[6] <- "fbs"
> names(heart_data)[7] <- "restecg"
> names(heart_data)[8] <- "thalach"
> names(heart_data)[9] <- "exang"
> names(heart_data)[10] <- "oldpeak"
> names(heart_data)[11] <- "slope"
> names(heart_data)[12] <- "ca"
> names(heart_data)[13] <- "thal"
> names(heart_data)[14] <- "num"
> names(heart_data)
 [1] "age"      "Gender"   "cp"       "trestbps" "chol"    
 [6] "fbs"      "restecg"  "thalach"  "exang"    "oldpeak" 
[11] "slope"    "ca"       "thal"     "num"     
> class(heart_data$age)
[1] "numeric"
> class(heart_data$Gender)
[1] "numeric"
> class(heart_data$age)
[1] "numeric"
> class(heart_data$cp)
[1] "numeric"
> class(heart_data$trestbps)
[1] "numeric"
> class(heart_data$chol)
[1] "numeric"
> class(heart_data$fbs)
[1] "numeric"
> class(heart_data$ca)
[1] "factor"
> class(heart_data$thal)
[1] "factor"
> class(heart_data$num)
[1] "integer"
>  levels(heart_data$ca)[levels(heart_data$ca) == "?"]<-"0.0"
> heart_data
   age Gender cp trestbps chol fbs restecg thalach exang
1   67      1  4      160  286   0       2     108     1
2   67      1  4      120  229   0       2     129     1
3   37      1  3      130  250   0       0     187     0
4   41      0  2      130  204   0       2     172     0
5   56      1  2      120  236   0       0     178     0
6   62      0  4      140  268   0       2     160     0
7   57      0  4      120  354   0       0     163     1
8   63      1  4      130  254   0       2     147     0
9   53      1  4      140  203   1       2     155     1
10  57      1  4      140  192   0       0     148     0
11  56      0  2      140  294   0       2     153     0
12  56      1  3      130  256   1       2     142     1
13  44      1  2      120  263   0       0     173     0
14  52      1  3      172  199   1       0     162     0
15  57      1  3      150  168   0       0     174     0
16  48      1  2      110  229   0       0     168     0
17  54      1  4      140  239   0       0     160     0
18  48      0  3      130  275   0       0     139     0
19  49      1  2      130  266   0       0     171     0
20  64      1  1      110  211   0       2     144     1
21  58      0  1      150  283   1       2     162     0
22  58      1  2      120  284   0       2     160     0
23  58      1  3      132  224   0       2     173     0
24  60      1  4      130  206   0       2     132     1
25  50      0  3      120  219   0       0     158     0
26  58      0  3      120  340   0       0     172     0
27  66      0  1      150  226   0       0     114     0
28  43      1  4      150  247   0       0     171     0
29  40      1  4      110  167   0       2     114     1
30  69      0  1      140  239   0       0     151     0
31  60      1  4      117  230   1       0     160     1
32  64      1  3      140  335   0       0     158     0
33  59      1  4      135  234   0       0     161     0
34  44      1  3      130  233   0       0     179     1
35  42      1  4      140  226   0       0     178     0
36  43      1  4      120  177   0       2     120     1
37  57      1  4      150  276   0       2     112     1
38  55      1  4      132  353   0       0     132     1
39  61      1  3      150  243   1       0     137     1
40  65      0  4      150  225   0       2     114     0
41  40      1  1      140  199   0       0     178     1
42  71      0  2      160  302   0       0     162     0
43  59      1  3      150  212   1       0     157     0
44  61      0  4      130  330   0       2     169     0
45  58      1  3      112  230   0       2     165     0
46  51      1  3      110  175   0       0     123     0
47  50      1  4      150  243   0       2     128     0
48  65      0  3      140  417   1       2     157     0
49  53      1  3      130  197   1       2     152     0
50  41      0  2      105  198   0       0     168     0
51  65      1  4      120  177   0       0     140     0
52  44      1  4      112  290   0       2     153     0
53  44      1  2      130  219   0       2     188     0
54  60      1  4      130  253   0       0     144     1
55  54      1  4      124  266   0       2     109     1
56  50      1  3      140  233   0       0     163     0
57  41      1  4      110  172   0       2     158     0
58  54      1  3      125  273   0       2     152     0
59  51      1  1      125  213   0       2     125     1
60  51      0  4      130  305   0       0     142     1
61  46      0  3      142  177   0       2     160     1
62  58      1  4      128  216   0       2     131     1
63  54      0  3      135  304   1       0     170     0
64  54      1  4      120  188   0       0     113     0
65  60      1  4      145  282   0       2     142     1
66  60      1  3      140  185   0       2     155     0
67  54      1  3      150  232   0       2     165     0
68  59      1  4      170  326   0       2     140     1
69  46      1  3      150  231   0       0     147     0
70  65      0  3      155  269   0       0     148     0
71  67      1  4      125  254   1       0     163     0
   oldpeak slope  ca thal num
1      1.5     2 3.0  3.0   2
2      2.6     2 2.0  7.0   1
3      3.5     3 0.0  3.0   0
4      1.4     1 0.0  3.0   0
5      0.8     1 0.0  3.0   0
6      3.6     3 2.0  3.0   3
7      0.6     1 0.0  3.0   0
8      1.4     2 1.0  7.0   2
9      3.1     3 0.0  7.0   1
10     0.4     2 0.0  6.0   0
11     1.3     2 0.0  3.0   0
12     0.6     2 1.0  6.0   2
13     0.0     1 0.0  7.0   0
14     0.5     1 0.0  7.0   0
15     1.6     1 0.0  3.0   0
16     1.0     3 0.0  7.0   1
17     1.2     1 0.0  3.0   0
18     0.2     1 0.0  3.0   0
19     0.6     1 0.0  3.0   0
20     1.8     2 0.0  3.0   0
21     1.0     1 0.0  3.0   0
22     1.8     2 0.0  3.0   1
23     3.2     1 2.0  7.0   3
24     2.4     2 2.0  7.0   4
25     1.6     2 0.0  3.0   0
26     0.0     1 0.0  3.0   0
27     2.6     3 0.0  3.0   0
28     1.5     1 0.0  3.0   0
29     2.0     2 0.0  7.0   3
30     1.8     1 2.0  3.0   0
31     1.4     1 2.0  7.0   2
32     0.0     1 0.0  3.0   1
33     0.5     2 0.0  7.0   0
34     0.4     1 0.0  3.0   0
35     0.0     1 0.0  3.0   0
36     2.5     2 0.0  7.0   3
37     0.6     2 1.0  6.0   1
38     1.2     2 1.0  7.0   3
39     1.0     2 0.0  3.0   0
40     1.0     2 3.0  7.0   4
41     1.4     1 0.0  7.0   0
42     0.4     1 2.0  3.0   0
43     1.6     1 0.0  3.0   0
44     0.0     1 0.0  3.0   1
45     2.5     2 1.0  7.0   4
46     0.6     1 0.0  3.0   0
47     2.6     2 0.0  7.0   4
48     0.8     1 1.0  3.0   0
49     1.2     3 0.0  3.0   0
50     0.0     1 1.0  3.0   0
51     0.4     1 0.0  7.0   0
52     0.0     1 1.0  3.0   2
53     0.0     1 0.0  3.0   0
54     1.4     1 1.0  7.0   1
55     2.2     2 1.0  7.0   1
56     0.6     2 1.0  7.0   1
57     0.0     1 0.0  7.0   1
58     0.5     3 1.0  3.0   0
59     1.4     1 1.0  3.0   0
60     1.2     2 0.0  7.0   2
61     1.4     3 0.0  3.0   0
62     2.2     2 3.0  7.0   1
63     0.0     1 0.0  3.0   0
64     1.4     2 1.0  7.0   2
65     2.8     2 2.0  7.0   2
66     3.0     2 0.0  3.0   1
67     1.6     1 0.0  7.0   0
68     3.4     3 0.0  7.0   2
69     3.6     2 0.0  3.0   1
70     0.8     1 0.0  3.0   0
71     0.2     2 2.0  7.0   3
 [ reached 'max' / getOption("max.print") -- omitted 231 rows ]
> heart_data$ca[heart_data$ca == 1.0]
factor(0)
Levels: 0.0 1.0 2.0 3.0
> typeof(heart_data$ca)
[1] "integer"
> nrow(heart_data)
[1] 302
> # Plotting Fate vs number of records
> heart_data$num[heart_data$num >= 1] <- 1 # Edit the fate to 0 and 1
> barplot(table(heart_data$num), main="Fate", col="black")
> mosaicplot(heart_data$Gender ~ heart_data$num,main="Fate by Gender",
+            shade=FALSE,color=TRUE,xlab="Gender", ylab="Heart disease")
> # Most important step
> levels(heart_data$thal)[levels(heart_data$thal)=="?"]<-"3.0"
> heart_data$thal
  [1] 3.0 7.0 3.0 3.0 3.0 3.0 3.0 7.0 7.0 6.0 3.0 6.0 7.0 7.0
 [15] 3.0 7.0 3.0 3.0 3.0 3.0 3.0 3.0 7.0 7.0 3.0 3.0 3.0 3.0
 [29] 7.0 3.0 7.0 3.0 7.0 3.0 3.0 7.0 6.0 7.0 3.0 7.0 7.0 3.0
 [43] 3.0 3.0 7.0 3.0 7.0 3.0 3.0 3.0 7.0 3.0 3.0 7.0 7.0 7.0
 [57] 7.0 3.0 3.0 7.0 3.0 7.0 3.0 7.0 7.0 3.0 7.0 7.0 3.0 3.0
 [71] 7.0 7.0 6.0 3.0 3.0 7.0 3.0 3.0 7.0 3.0 3.0 3.0 7.0 3.0
 [85] 3.0 3.0 3.0 3.0 3.0 3.0 7.0 7.0 3.0 3.0 7.0 7.0 7.0 3.0
 [99] 3.0 3.0 3.0 3.0 3.0 7.0 7.0 7.0 7.0 7.0 7.0 7.0 3.0 6.0
[113] 7.0 7.0 6.0 3.0 3.0 7.0 7.0 7.0 7.0 3.0 7.0 3.0 3.0 7.0
[127] 7.0 3.0 3.0 7.0 7.0 3.0 3.0 3.0 3.0 7.0 7.0 7.0 3.0 3.0
[141] 7.0 3.0 7.0 7.0 3.0 7.0 3.0 3.0 3.0 7.0 3.0 7.0 7.0 3.0
[155] 3.0 7.0 7.0 7.0 7.0 7.0 3.0 3.0 3.0 3.0 7.0 3.0 3.0 7.0
[169] 3.0 7.0 7.0 3.0 3.0 6.0 7.0 7.0 6.0 3.0 3.0 7.0 7.0 3.0
[183] 7.0 3.0 3.0 7.0 6.0 7.0 7.0 3.0 7.0 7.0 3.0 3.0 3.0 3.0
[197] 3.0 3.0 3.0 3.0 3.0 7.0 7.0 7.0 7.0 7.0 7.0 3.0 3.0 3.0
[211] 7.0 3.0 7.0 3.0 7.0 3.0 3.0 3.0 3.0 3.0 3.0 3.0 7.0 3.0
[225] 3.0 3.0 3.0 3.0 3.0 3.0 3.0 3.0 3.0 3.0 3.0 7.0 7.0 3.0
[239] 3.0 3.0 3.0 3.0 3.0 3.0 3.0 7.0 3.0 7.0 3.0 6.0 7.0 7.0
[253] 3.0 3.0 3.0 3.0 3.0 3.0 7.0 3.0 3.0 3.0 3.0 3.0 6.0 3.0
[267] 6.0 7.0 3.0 7.0 6.0 7.0 3.0 3.0 7.0 3.0 3.0 3.0 3.0 7.0
[281] 3.0 7.0 3.0 7.0 6.0 6.0 7.0 7.0 3.0 7.0 3.0 6.0 7.0 3.0
[295] 3.0 6.0 7.0 7.0 7.0 7.0 3.0 3.0
Levels: 3.0 6.0 7.0
> table(heart_data$thal)

3.0 6.0 7.0 
168  17 117 
> heart_data$thal[is.na(heart_data$thal)]<-'3.0'
> table(heart_data$ca)

0.0 1.0 2.0 3.0 
179  65  38  20 
> library(caTools)
> n<- sapply(heart_data[, c(1)], mean)
> set.seed(123)
> v3
   sex restecg thalach exang
11   0       2     153     0
12   1       2     142     1
13   1       0     173     0
14   1       0     162     0
> m<- sapply(v3,max)
> m
    sex restecg thalach   exang 
    "1"     "2"   "173"     "1" 
> set.seed(121)
> split = sample.split(heart_data$num, SplitRatio = 2/3)
> train_heart_data = subset(heart_data, split == TRUE)
> test_heart_data = subset(heart_data, split == FALSE)
> library(caTools)
> regressor=lm(formula = num~age, data=train_heart_data)
> View(regressor)
> hd_age_predict=predict(regressor, newdata=test_heart_data)
> hd_age_predict
        2         4         7         8        10        18 
0.6430055 0.2652722 0.4977234 0.5848927 0.4977234 0.3669696 
       19        20        25        29        30        31 
0.3814978 0.5994209 0.3960260 0.2507440 0.6720619 0.5413081 
       33        34        42        43        45        47 
0.5267799 0.3088568 0.7011183 0.5267799 0.5122517 0.3960260 
       52        59        61        65        68        70 
0.3088568 0.4105542 0.3379132 0.5413081 0.5267799 0.6139491 
       73        75        78        79        83        84 
0.6139491 0.6139491 0.3669696 0.5122517 0.6575337 0.4250824 
       85        86       108       109       110       111 
0.3088568 0.3524414 0.5558363 0.2362158 0.5558363 0.4831952 
      115       118       122       129       134       136 
0.2652722 0.5848927 0.4105542 0.5703645 0.2943286 0.6865901 
      137       139       141       144       147       149 
0.5703645 0.4105542 0.5267799 0.5122517 0.2652722 0.5413081 
      155       156       158       168       169       173 
0.6865901 0.4105542 0.5413081 0.1781030 0.3233850 0.5703645 
      175       176       179       184       185       186 
0.4977234 0.4250824 0.4396106 0.5413081 0.5848927 0.2798004 
      187       192       194       197       201       204 
0.6284773 0.2943286 0.6575337 0.3233850 0.5994209 0.2943286 
      206       207       214       217       219       220 
0.5122517 0.3960260 0.4250824 0.3379132 0.5267799 0.2652722 
      225       226       229       230       232       236 
0.1635748 0.3524414 0.6284773 0.4250824 0.3814978 0.4831952 
      237       240       241       247       248       252 
0.3379132 0.2652722 0.2652722 0.3524414 0.4250824 0.5994209 
      255       258       262       265       267       273 
0.2798004 0.6865901 0.5413081 0.2798004 0.5267799 0.7011183 
      276       282       284       285       288       292 
0.6284773 0.4686670 0.5558363 0.5122517 0.4831952 0.3088568 
      293       296       301       302 
0.5848927 0.5267799 0.4977234 0.2216876 
> round_age=hd_age_predict
> rage=round(round_age)
> table(rage,test_heart_data$num)
    
rage  0  1
   0 34 20
   1 20 26
> library(e1071)
> library(caret)
Loading required package: lattice
Loading required package: ggplot2
> typeof(rage)
[1] "double"
> levels(rage)
NULL
> levels(test_heart_data$num)
NULL
> str(rage)
 Named num [1:100] 1 0 0 1 0 0 0 1 0 0 ...
 - attr(*, "names")= chr [1:100] "2" "4" "7" "8" ...
> r1 = as.data.frame(rage)
> r1
    rage
2      1
4      0
7      0
8      1
10     0
18     0
19     0
20     1
25     0
29     0
30     1
31     1
33     1
34     0
42     1
43     1
45     1
47     0
52     0
59     0
61     0
65     1
68     1
70     1
73     1
75     1
78     0
79     1
83     1
84     0
85     0
86     0
108    1
109    0
110    1
111    0
115    0
118    1
122    0
129    1
134    0
136    1
137    1
139    0
141    1
144    1
147    0
149    1
155    1
156    0
158    1
168    0
169    0
173    1
175    0
176    0
179    0
184    1
185    1
186    0
187    1
192    0
194    1
197    0
201    1
204    0
206    1
207    0
214    0
217    0
219    1
220    0
225    0
226    0
229    1
230    0
232    0
236    0
237    0
240    0
241    0
247    0
248    0
252    1
255    0
258    1
262    1
265    0
267    1
273    1
276    1
282    0
284    1
285    1
288    0
292    0
293    1
296    1
301    0
302    0
> df1=confusionMatrix(as.factor(r1$rage),as.factor(test_heart_data$num))
> df1
Confusion Matrix and Statistics

          Reference
Prediction  0  1
         0 34 20
         1 20 26
                                          
               Accuracy : 0.6             
                 95% CI : (0.4972, 0.6967)
    No Information Rate : 0.54            
    P-Value [Acc > NIR] : 0.1347          
                                          
                  Kappa : 0.1948          
                                          
 Mcnemar's Test P-Value : 1.0000          
                                          
            Sensitivity : 0.6296          
            Specificity : 0.5652          
         Pos Pred Value : 0.6296          
         Neg Pred Value : 0.5652          
             Prevalence : 0.5400          
         Detection Rate : 0.3400          
   Detection Prevalence : 0.5400          
      Balanced Accuracy : 0.5974          
                                          
       'Positive' Class : 0               
                                          
> 
